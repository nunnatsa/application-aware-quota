# Builder stage
FROM  --platform=${BUILDPLATFORM} docker.io/library/golang:1.23-alpine as builder
ARG BUILDPLATFORM

# Install make
RUN apk update && apk add make

WORKDIR /workdir/app

# Copy the source code from the host to the container
COPY cmd ./cmd
COPY vendor ./vendor
COPY go.mod ./go.mod
COPY go.sum ./go.sum
COPY Makefile ./Makefile

ARG TARGETOS
ARG TARGETARCH
RUN GOOS=${TARGETOS} GOARCH=${TARGETARCH} make label_sidecar

# Final stage
FROM docker.io/alpine

# Set the working directory to /app
WORKDIR /app/label_sidecar

RUN adduser -u 1001 -D -s /bin/sh -h /app/label_sidecar label_sidecar

# Set the entrypoint to the binary
ENTRYPOINT ["/app/label_sidecar/label_sidecar"]

# Copy the binary from the builder stage to the final image
COPY --from=builder /workdir/app/label_sidecar /app/label_sidecar/

USER 1001
